CREATE OR REPLACE PACKAGE PRUEBAS_CATALOGO
AS
  PROCEDURE INICIALIZAR;
  PROCEDURE INSERTAR(NOMBRE_PRUEBA VARCHAR2,W_NOMBRE VARCHAR,W_DESCRIPCION VARCHAR,W_PRECIO NUMBER,W_IVA NUMBER, W_STOCK NUMBER, W_STOCKMINIMO NUMBER,
  W_TIPOPRODUCTO VARCHAR,W_TIPOCATALOGO VARCHAR, SALIDAESPERADA BOOLEAN);
  PROCEDURE ACTUALIZAR(NOMBRE_PRUEBA VARCHAR2,W_IDCATALOGO NUMBER,W_NOMBRE VARCHAR,W_DESCRIPCION VARCHAR,W_PRECIO NUMBER,W_IVA NUMBER, W_STOCK NUMBER,
  W_STOCKMINIMO NUMBER, W_TIPOPRODUCTO VARCHAR,W_TIPOCATALOGO VARCHAR, SALIDAESPERADA BOOLEAN);
  PROCEDURE ELIMINAR(NOMBRE_PRUEBA VARCHAR2, W_IDCATALOGO NUMBER, SALIDAESPERADA BOOLEAN);
END PRUEBAS_CATALOGO;
/
CREATE OR REPLACE PACKAGE BODY PRUEBAS_CATALOGO
AS
  FUNCTION ASSERT_EQUALS(
      SALIDA         BOOLEAN,
      SALIDAESPERADA BOOLEAN)
    RETURN VARCHAR2
  AS
  BEGIN
    IF(SALIDA = SALIDAESPERADA) THEN
      RETURN 'EXITO';
    ELSE
      RETURN 'FALLO';
    END IF;
  END ASSERT_EQUALS;
  
  PROCEDURE INICIALIZAR
  AS
  BEGIN
    DELETE FROM CATALOGO;
    COMMIT WORK;
  END INICIALIZAR;
  
  PROCEDURE INSERTAR(NOMBRE_PRUEBA VARCHAR2,W_NOMBRE VARCHAR,W_DESCRIPCION VARCHAR,W_PRECIO NUMBER,W_IVA NUMBER, W_STOCK NUMBER, W_STOCKMINIMO NUMBER,
  W_TIPOPRODUCTO VARCHAR,W_TIPOCATALOGO VARCHAR, SALIDAESPERADA BOOLEAN)
  AS
    SALIDA BOOLEAN := TRUE;
    DETALLE CATALOGO%ROWTYPE;
    W_IDCATALOGO NUMBER;
  BEGIN
    --INSERT
    --INTO OFERTAS VALUES
      --(
        --sec_OFERTAS.NEXTVAL,
        --W_NOMBRE,
        --W_DESCRIPCION,
        --W_PRECIO,
        --W_IVA,
        --W_STOCK,
        --W_STOCKMINIMO,
        --W_TIPOPRODUCTO,
        --W_TIPOCATALOGO
      --);
    INSERTAR_CATALOGOS(W_NOMBRE,W_DESCRIPCION,W_PRECIO,W_IVA,W_STOCK,W_STOCKMINIMO,W_TIPOPRODUCTO,W_TIPOCATALOGO );
    W_IDCATALOGO := SEC_CATALOGO.CURRVAL;
    SELECT * INTO DETALLE FROM CATALOGO WHERE IDCATALOGO=W_IDCATALOGO;
    IF (DETALLE.NOMBRE<>W_NOMBRE OR DETALLE.DESCRIPCION<>W_DESCRIPCION OR DETALLE.PRECIO<>W_PRECIO OR DETALLE.IVA<>W_IVA OR DETALLE.STOCK<>W_STOCK 
    OR DETALLE.STOCKMINIMO<>W_STOCKMINIMO OR DETALLE.TIPOPRODUCTO<>W_TIPOPRODUCTO OR DETALLE.TIPOCATALOGO<>W_TIPOCATALOGO) THEN
      SALIDA := FALSE;
    END IF;
    COMMIT WORK;
 
 
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || W_IDCATALOGO || ' ' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END INSERTAR;
  
  PROCEDURE ACTUALIZAR(
      NOMBRE_PRUEBA  VARCHAR2,
      W_IDCATALOGO NUMBER,
      W_NOMBRE VARCHAR,W_DESCRIPCION VARCHAR,W_PRECIO NUMBER,W_IVA NUMBER, W_STOCK NUMBER, W_STOCKMINIMO NUMBER,
      W_TIPOPRODUCTO VARCHAR,W_TIPOCATALOGO VARCHAR,
      SALIDAESPERADA BOOLEAN)
  AS
    SALIDA BOOLEAN := TRUE;
    DETALLE CATALOGO%ROWTYPE;
  BEGIN
    UPDATE CATALOGO
    SET  NOMBRE =W_NOMBRE,
      DESCRIPCION=W_DESCRIPCION,
      PRECIO=W_PRECIO,
      IVA=W_IVA,
      STOCK=W_STOCK,
      STOCKMINIMO=W_STOCKMINIMO,
      TIPOPRODUCTO=W_TIPOPRODUCTO,
      TIPOCATALOGO=W_TIPOCATALOGO
    WHERE IDCATALOGO =W_IDCATALOGO;
    SELECT * INTO DETALLE FROM CATALOGO WHERE IDCATALOGO=W_IDCATALOGO;
    IF (DETALLE.NOMBRE<>W_NOMBRE OR DETALLE.DESCRIPCION<>W_DESCRIPCION OR DETALLE.PRECIO<>W_PRECIO OR DETALLE.IVA<>W_IVA OR DETALLE.STOCK<>W_STOCK 
    OR DETALLE.STOCKMINIMO<>W_STOCKMINIMO OR DETALLE.TIPOPRODUCTO<>W_TIPOPRODUCTO OR DETALLE.TIPOCATALOGO<>W_TIPOCATALOGO) THEN
      SALIDA := FALSE;
    END IF;
    COMMIT WORK;
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || W_IDCATALOGO || ' ' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END ACTUALIZAR;
  
  PROCEDURE ELIMINAR(
      NOMBRE_PRUEBA  VARCHAR2,
      W_IDCATALOGO     NUMBER,
      SALIDAESPERADA BOOLEAN)
  AS
    SALIDA    BOOLEAN := TRUE;
    N_CATALOGO INTEGER;
  BEGIN
    DELETE FROM CATALOGO WHERE IDCATALOGO=W_IDCATALOGO;
    SELECT COUNT (*) INTO N_CATALOGO FROM CATALOGO WHERE IDCATALOGO=W_IDCATALOGO;
    IF (N_CATALOGO<>0) THEN
      SALIDA := FALSE;
    END IF;
    COMMIT WORK;
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || W_IDCATALOGO || ' ' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END ELIMINAR;
END PRUEBAS_CATALOGO;
/
