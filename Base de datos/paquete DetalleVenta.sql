create or replace 
PACKAGE PRUEBAS_DETALLEVENTA AS

PROCEDURE inicializar;
PROCEDURE insertar(nombre_prueba VARCHAR2, w_CANTIDAD number, w_PRECIOVENTA number,
w_IVA number, w_IDVENTAS number, w_IDCATALOGO number, w_salida_esperada Boolean);
PROCEDURE Actualizar (nombre_prueba VARCHAR2,w_IDDETALLEVENTA number ,w_CANTIDAD number, w_PRECIOVENTA number,
w_IVA number, w_IDCATALOGO number, w_salida_esperada Boolean);
PROCEDURE eliminar (nombre_prueba VARCHAR2,w_IDDETALLEVENTA NUMBER,  w_salida_esperada boolean);
end PRUEBAS_DETALLEVENTA;
/

CREATE OR REPLACE 
PACKAGE BODY PRUEBAS_DETALLEVENTA AS
  PROCEDURE INICIALIZAR AS
  BEGIN
  DELETE FROM DETALLEVENTA;
END INICIALIZAR;

PROCEDURE insertar(nombre_prueba VARCHAR2, w_CANTIDAD number, w_PRECIOVENTA number,
w_IVA number, w_IDVENTAS number, w_IDCATALOGO number, w_salida_esperada Boolean) AS
SALIDA BOOLEAN := TRUE;
w_DETALLEVENTA DETALLEVENTA%ROWTYPE;
w_IDDETALLEVENTA NUMBER;
BEGIN
INSERTAR_DETALLEVENTA(w_CANTIDAD,w_PRECIOVENTA,w_IVA,w_IDVENTAS,w_IDCATALOGO);
w_IDDETALLEVENTA:=sec_detalleventa.currval;
SELECT * INTO w_DETALLEVENTA FROM DETALLEVENTA WHERE (IDDETALLEVENTA=w_IDDETALLEVENTA);

IF(w_DETALLEVENTA.CANTIDAD<>w_CANTIDAD OR w_DETALLEVENTA.PRECIOVENTA<>w_PRECIOVENTA OR w_DETALLEVENTA.IVA<>w_IVA OR
w_DETALLEVENTA.IDVENTAS<>w_IDVENTAS OR w_DETALLEVENTA.IDCATALOGO<>w_IDCATALOGO )THEN
SALIDA:=FALSE;
END IF;
COMMIT WORK;

DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS(SALIDA,w_salida_esperada));

EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS (FALSE,w_salida_esperada));
ROLLBACK;
END insertar;

PROCEDURE Actualizar (nombre_prueba VARCHAR2,w_IDDETALLEVENTA number ,w_CANTIDAD number, w_PRECIOVENTA number,
w_IVA number, w_IDCATALOGO number, w_salida_esperada Boolean) AS
salida Boolean := TRUE;
w_DETALLEVENTA DETALLEVENTA%ROWTYPE;
BEGIN
ACTUALIZAR_DETALLEVENTA(w_IDDETALLEVENTA,w_CANTIDAD,w_PRECIOVENTA,w_IVA,w_IDCATALOGO);
SELECT * INTO w_DETALLEVENTA FROM DETALLEVENTA WHERE (IDDETALLEVENTA=w_IDDETALLEVENTA);

IF(w_DETALLEVENTA.CANTIDAD<>w_CANTIDAD OR w_DETALLEVENTA.PRECIOVENTA<>w_PRECIOVENTA OR w_DETALLEVENTA.IVA<>w_IVA OR w_DETALLEVENTA.IDCATALOGO<>w_IDCATALOGO )THEN
SALIDA:=FALSE;
END IF;
COMMIT WORK;

DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS(SALIDA,w_salida_esperada));

EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS (FALSE,w_salida_esperada));
ROLLBACK;


END ACTUALIZAR;

PROCEDURE eliminar (nombre_prueba VARCHAR2,w_IDDETALLEVENTA NUMBER,  w_salida_esperada boolean) AS
salida Boolean := TRUE;
n_detalleventa INTEGER;

BEGIN
ELIMINAR_DETALLEVENTA(w_IDDETALLEVENTA);
SELECT COUNT (*) INTO n_detalleventa FROM DETALLEVENTA WHERE (IDDETALLEVENTA=w_IDDETALLEVENTA);
IF(n_detalleventa<>0) THEN
SALIDA:=FALSE;
END IF;
COMMIT WORK;

DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS(SALIDA,w_salida_esperada));

EXCEPTION 
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS (FALSE,w_salida_esperada));
ROLLBACK;

END ELIMINAR;






END;
