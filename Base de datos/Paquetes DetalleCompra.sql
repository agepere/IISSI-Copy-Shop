CREATE OR REPLACE PACKAGE PRUEBAS_DETALLECOMPRA
AS
  PROCEDURE INICIALIZAR;
  PROCEDURE INSERTAR(NOMBRE_PRUEBA VARCHAR2, W_CANTIDAD NUMBER, W_PRECIOCOMPRA NUMBER, W_IVA NUMBER, W_IDCOMPRAS NUMBER,
     W_IDCATALOGO  NUMBER, SALIDAESPERADA BOOLEAN);
  PROCEDURE ACTUALIZAR(NOMBRE_PRUEBA VARCHAR2,W_IDDETALLECOMPRA NUMBER, W_CANTIDAD NUMBER, W_PRECIOCOMPRA NUMBER, W_IVA NUMBER,
     W_IDCATALOGO  NUMBER, SALIDAESPERADA BOOLEAN);
  PROCEDURE ELIMINAR(NOMBRE_PRUEBA VARCHAR2, W_IDDETALLECOMPRA NUMBER, SALIDAESPERADA BOOLEAN);
END PRUEBAS_DETALLECOMPRA;
/

CREATE OR REPLACE PACKAGE BODY PRUEBAS_DETALLECOMPRA
AS
  FUNCTION ASSERT_EQUALS(
      SALIDA         BOOLEAN,
      SALIDAESPERADA BOOLEAN)
    RETURN VARCHAR2
  AS
  BEGIN
    IF(SALIDA = SALIDAESPERADA) THEN
      RETURN 'EXITO';
    ELSE
      RETURN 'FALLO';
    END IF;
  END ASSERT_EQUALS;
  
  PROCEDURE INICIALIZAR
  AS
  BEGIN
    DELETE FROM DETALLECOMPRA;
    COMMIT WORK;
  END INICIALIZAR;
  
  PROCEDURE INSERTAR(NOMBRE_PRUEBA VARCHAR2, W_CANTIDAD NUMBER, W_PRECIOCOMPRA NUMBER, W_IVA NUMBER, W_IDCOMPRAS NUMBER,
     W_IDCATALOGO  NUMBER, SALIDAESPERADA BOOLEAN)
  AS
    SALIDA BOOLEAN := TRUE;
    DETALLE DETALLECOMPRA%ROWTYPE;
    W_IDDETALLECOMPRA NUMBER;
  BEGIN
    INSERTAR_DETALLECOMPRA(W_CANTIDAD, W_PRECIOCOMPRA, W_IVA, W_IDCOMPRAS, W_IDCATALOGO);
    W_IDDETALLECOMPRA := SEC_DETALLECOMPRA.CURRVAL;
    SELECT * INTO DETALLE FROM DETALLECOMPRA WHERE IDDETALLECOMPRA=W_IDDETALLECOMPRA;
    IF (DETALLE.CANTIDAD<>W_CANTIDAD OR DETALLE.PRECIOCOMPRA<>W_PRECIOCOMPRA OR DETALLE.IVA<>W_IVA OR DETALLE.IDCOMPRAS<>W_IDCOMPRAS OR DETALLE.IDCATALOGO<>W_IDCATALOGO) THEN
      SALIDA := FALSE;
    END IF;
    COMMIT WORK;
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': 1 ' || W_IDDETALLECOMPRA || ' ' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': 2 ' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END INSERTAR;
  
  PROCEDURE ACTUALIZAR(
      NOMBRE_PRUEBA  VARCHAR2,
      W_IDDETALLECOMPRA NUMBER,
      W_CANTIDAD NUMBER,
      W_PRECIOCOMPRA NUMBER,
      W_IVA NUMBER,
      W_IDCATALOGO NUMBER,
      SALIDAESPERADA BOOLEAN)
  AS
    SALIDA BOOLEAN := TRUE;
    DETALLE DETALLECOMPRA%ROWTYPE;
  BEGIN
--    UPDATE DETALLECOMPRA
--    SET  CANTIDAD =W_CANTIDAD,
--      PRECIOCOMPRA  =W_PRECIOCOMPRA,
--      IVA = W_IVA,
--      IDCATALOGO = W_IDCATALOGO
--    WHERE IDDETALLECOMPRA =W_IDDETALLECOMPRA;
    ACTUALIZAR_DETALLECOMPRA(W_IDDETALLECOMPRA, W_CANTIDAD, W_PRECIOCOMPRA, W_IVA, W_IDCATALOGO);
    SELECT * INTO DETALLE FROM DETALLECOMPRA WHERE IDDETALLECOMPRA=W_IDDETALLECOMPRA;
    IF (DETALLE.CANTIDAD<>W_CANTIDAD OR DETALLE.PRECIOCOMPRA<>W_PRECIOCOMPRA OR DETALLE.IVA<>W_IVA OR DETALLE.IDCATALOGO<>W_IDCATALOGO) THEN
      SALIDA := FALSE;
    END IF;
    COMMIT WORK;
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': 1 ' || W_IDDETALLECOMPRA || ' ' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': 2 ' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END ACTUALIZAR;
  
  PROCEDURE ELIMINAR(
      NOMBRE_PRUEBA  VARCHAR2,
      W_IDDETALLECOMPRA     NUMBER,
      SALIDAESPERADA BOOLEAN)
  AS
    SALIDA    BOOLEAN := TRUE;
    N_DETALLECOMPRA INTEGER;
  BEGIN
    --DELETE FROM DETALLECOMPRA WHERE IDDETALLECOMPRA=W_IDDETALLECOMPRA;
    ELIMINAR_DETALLECOMPRA(W_IDDETALLECOMPRA);
    SELECT COUNT (*) INTO N_DETALLECOMPRA FROM DETALLECOMPRA WHERE IDDETALLECOMPRA=W_IDDETALLECOMPRA;
    IF (N_DETALLECOMPRA<>0) THEN
      SALIDA := FALSE;
    END IF;
    COMMIT WORK;
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || W_IDDETALLECOMPRA || ' ' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END ELIMINAR;
END PRUEBAS_DETALLECOMPRA;
/
