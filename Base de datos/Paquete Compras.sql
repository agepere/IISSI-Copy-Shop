CREATE OR REPLACE PACKAGE PRUEBAS_COMPRAS
AS
  PROCEDURE INICIALIZAR;
  PROCEDURE INSERTAR(NOMBRE_PRUEBA VARCHAR2, W_FECHACOMPRA DATE, W_TOTAL NUMBER,
     W_IDPROVEEDOR  NUMBER, SALIDAESPERADA BOOLEAN);
  PROCEDURE ACTUALIZAR(NOMBRE_PRUEBA VARCHAR2, W_IDCOMPRA NUMBER, W_FECHACOMPRA DATE,
      W_TOTAL NUMBER, W_IDPROVEEDOR  NUMBER, SALIDAESPERADA BOOLEAN);
  PROCEDURE ELIMINAR(NOMBRE_PRUEBA VARCHAR2, W_IDCOMPRA NUMBER, SALIDAESPERADA BOOLEAN);
END PRUEBAS_COMPRAS;
/
CREATE OR REPLACE PACKAGE BODY PRUEBAS_COMPRAS
AS
  FUNCTION ASSERT_EQUALS(
      SALIDA         BOOLEAN,
      SALIDAESPERADA BOOLEAN)
    RETURN VARCHAR2
  AS
  BEGIN
    IF(SALIDA = SALIDAESPERADA) THEN
      RETURN 'EXITO';
    ELSE
      RETURN 'FALLO';
    END IF;
  END ASSERT_EQUALS;
  
  PROCEDURE INICIALIZAR
  AS
  BEGIN
    DELETE FROM COMPRAS;
  END INICIALIZAR;
  
  PROCEDURE ELIMINAR(
      NOMBRE_PRUEBA  VARCHAR2,
      W_IDCOMPRA     NUMBER,
      SALIDAESPERADA BOOLEAN)
  AS
    SALIDA    BOOLEAN := TRUE;
    N_COMPRAS INTEGER;
  BEGIN
    DELETE FROM COMPRAS WHERE IDCOMPRAS=W_IDCOMPRA;
    SELECT COUNT (*) INTO N_COMPRAS FROM COMPRAS WHERE IDCOMPRAS=W_IDCOMPRA;
    IF (N_COMPRAS<>0) THEN
      SALIDA     := FALSE;
    END IF;
    COMMIT WORK;
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END ELIMINAR;
  
  PROCEDURE INSERTAR(
      NOMBRE_PRUEBA  VARCHAR2,
      W_FECHACOMPRA  DATE,
      W_TOTAL        NUMBER,
      W_IDPROVEEDOR  NUMBER,
      SALIDAESPERADA BOOLEAN)
  AS
    SALIDA BOOLEAN := TRUE;
    COMPRA COMPRAS%ROWTYPE;
    W_IDCOMPRA NUMBER;
  BEGIN
    INSERT
    INTO COMPRAS VALUES
      (
        sec_compras.NEXTVAL,
        W_FECHACOMPRA,
        W_TOTAL,
        W_IDPROVEEDOR
      );
    W_IDCOMPRA := SEC_COMPRAS.CURRVAL;
    SELECT * INTO COMPRA FROM COMPRAS WHERE IDCOMPRAS=W_IDCOMPRA;
    IF (COMPRA.FECHACOMPRA<>W_FECHACOMPRA OR COMPRA.TOTAL<>W_TOTAL OR COMPRA.IDPROVEEDOR<>W_IDPROVEEDOR) THEN
      SALIDA := FALSE;
    END IF;
    COMMIT WORK;
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END INSERTAR;
  
  PROCEDURE ACTUALIZAR(
      NOMBRE_PRUEBA  VARCHAR2,
      W_IDCOMPRA     NUMBER,
      W_FECHACOMPRA  DATE,
      W_TOTAL        NUMBER,
      W_IDPROVEEDOR  NUMBER,
      SALIDAESPERADA BOOLEAN)
  AS
    SALIDA BOOLEAN := TRUE;
    COMPRA COMPRAS%ROWTYPE;
  BEGIN
    UPDATE COMPRAS
    SET FECHACOMPRA=W_FECHACOMPRA,
      TOTAL        =W_TOTAL,
      IDPROVEEDOR  =W_IDPROVEEDOR
    WHERE IDCOMPRAS =W_IDCOMPRA;
    SELECT * INTO COMPRA FROM COMPRAS WHERE IDCOMPRAS=W_IDCOMPRA;
    IF (COMPRA.FECHACOMPRA<>W_FECHACOMPRA OR COMPRA.TOTAL<>W_TOTAL OR COMPRA.IDPROVEEDOR<>W_IDPROVEEDOR) THEN
      SALIDA := FALSE;
    END IF;
    COMMIT WORK;
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END ACTUALIZAR;
  

END PRUEBAS_COMPRAS;
/
