CREATE OR REPLACE PACKAGE PRUEBAS_OFERTAS
AS
  PROCEDURE INICIALIZAR;
  PROCEDURE INSERTAR(NOMBRE_PRUEBA VARCHAR2,W_FECHAINICIO DATE, W_FECHAFIN DATE, W_DESCUENTO NUMBER, W_IDCATALOGO NUMBER, SALIDAESPERADA BOOLEAN);
  PROCEDURE ACTUALIZAR(NOMBRE_PRUEBA VARCHAR2,W_IDOFERTA NUMBER,W_FECHAINICIO DATE, W_FECHAFIN DATE, W_DESCUENTO NUMBER, W_IDCATALOGO NUMBER, SALIDAESPERADA BOOLEAN);
  PROCEDURE ELIMINAR(NOMBRE_PRUEBA VARCHAR2, W_IDOFERTA NUMBER, SALIDAESPERADA BOOLEAN);
END PRUEBAS_OFERTAS;
/
CREATE OR REPLACE PACKAGE BODY PRUEBAS_OFERTAS
AS
  FUNCTION ASSERT_EQUALS(
      SALIDA         BOOLEAN,
      SALIDAESPERADA BOOLEAN)
    RETURN VARCHAR2
  AS
  BEGIN
    IF(SALIDA = SALIDAESPERADA) THEN
      RETURN 'EXITO';
    ELSE
      RETURN 'FALLO';
    END IF;
  END ASSERT_EQUALS;
  
  PROCEDURE INICIALIZAR
  AS
  BEGIN
    DELETE FROM OFERTAS;
    COMMIT WORK;
  END INICIALIZAR;
  
  PROCEDURE INSERTAR(NOMBRE_PRUEBA VARCHAR2,W_FECHAINICIO DATE, W_FECHAFIN DATE, W_DESCUENTO NUMBER, W_IDCATALOGO NUMBER, SALIDAESPERADA BOOLEAN)
  AS
    SALIDA BOOLEAN := TRUE;
    DETALLE OFERTAS%ROWTYPE;
    W_IDOFERTA NUMBER;
  BEGIN
    --INSERT
    --INTO OFERTAS VALUES
      --(
        --sec_OFERTAS.NEXTVAL,
        --W_FECHAINICIO,
        --W_FECHAFIN,
        --W_DESCUENTO,
        --W_IDCATALOGO
      --);
    INSERTAR_OFERTAS(W_FECHAINICIO, W_FECHAFIN, W_DESCUENTO, W_IDCATALOGO );
    W_IDOFERTA := SEC_OFERTAS.CURRVAL;
    SELECT * INTO DETALLE FROM OFERTAS WHERE IDOFERTA=W_IDOFERTA;
    IF (DETALLE.FECHAINICIO<>W_FECHAINICIO OR DETALLE.FECHAFIN<>W_FECHAFIN OR DETALLE.DESCUENTO<>W_DESCUENTO OR DETALLE.IDCATALOGO<>W_IDCATALOGO) THEN
      SALIDA := FALSE;
    END IF;
    COMMIT WORK;
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || W_IDOFERTA || ' ' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ':' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END INSERTAR;
  
  PROCEDURE ACTUALIZAR(
      NOMBRE_PRUEBA  VARCHAR2,
      W_IDOFERTA NUMBER,
      W_FECHAINICIO DATE,
      W_FECHAFIN DATE, 
      W_DESCUENTO NUMBER, 
      W_IDCATALOGO NUMBER,
      SALIDAESPERADA BOOLEAN)
  AS
    SALIDA BOOLEAN := TRUE;
    DETALLE OFERTAS%ROWTYPE;
  BEGIN
    UPDATE OFERTAS
    SET  FECHAINICIO =W_FECHAINICIO,
      FECHAFIN=W_FECHAFIN,
      DESCUENTO=W_DESCUENTO,
      IDCATALOGO = W_IDCATALOGO
    WHERE IDOFERTA =W_IDOFERTA;
    SELECT * INTO DETALLE FROM OFERTAS WHERE IDOFERTA=W_IDOFERTA;
    IF (DETALLE.FECHAINICIO<>W_FECHAINICIO OR DETALLE.FECHAFIN<>W_FECHAFIN OR DETALLE.DESCUENTO<>W_DESCUENTO OR DETALLE.IDCATALOGO<>W_IDCATALOGO) THEN
      SALIDA := FALSE;
    END IF;
    COMMIT WORK;
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || W_IDOFERTA || ' ' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END ACTUALIZAR;
  
  PROCEDURE ELIMINAR(
      NOMBRE_PRUEBA  VARCHAR2,
      W_IDOFERTA     NUMBER,
      SALIDAESPERADA BOOLEAN)
  AS
    SALIDA    BOOLEAN := TRUE;
    N_OFERTA INTEGER;
  BEGIN
    DELETE FROM OFERTAS WHERE IDOFERTA=W_IDOFERTA;
    SELECT COUNT (*) INTO N_OFERTA FROM OFERTAS WHERE IDOFERTA=W_IDOFERTA;
    IF (N_OFERTA<>0) THEN
      SALIDA := FALSE;
    END IF;
    COMMIT WORK;
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || W_IDOFERTA || ' ' || ASSERT_EQUALS(SALIDA, SALIDAESPERADA));
  EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(NOMBRE_PRUEBA || ': ' || ASSERT_EQUALS(FALSE, SALIDAESPERADA));
    ROLLBACK;
  END ELIMINAR;
END PRUEBAS_OFERTAS;
/
